{
  "hash": "557856bf6ef223fc64663e663109719f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Working with a single dataset\"\norder: 4\ntitle-slide-attributes:\n    data-background-gradient: linear-gradient(to top right, {{< brand color background >}}, {{< brand color pastelpink >}}, {{< brand color fmorange >}}, {{< brand color tangerine >}})\n\nformat: \n  revealjs:\n    margin: .15\n    quarto-required: \">= 1.6.0\"\n    width: 1600\n    height: 900\n    slide-number: \"c\"\n    css: ../styles.css\n    code-copy: true\n    echo: true\n    code-overflow: scroll\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Data: Penguins \n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   species island bill_len bill_dep flipper_len body_mass sex    year\n   <fct>   <fct>     <dbl>    <dbl>       <int>     <int> <fct> <int>\n 1 Adelie  Torge…     39.1     18.7         181      3750 male   2007\n 2 Adelie  Torge…     39.5     17.4         186      3800 fema…  2007\n 3 Adelie  Torge…     40.3     18           195      3250 fema…  2007\n 4 Adelie  Torge…     NA       NA            NA        NA <NA>   2007\n 5 Adelie  Torge…     36.7     19.3         193      3450 fema…  2007\n 6 Adelie  Torge…     39.3     20.6         190      3650 male   2007\n 7 Adelie  Torge…     38.9     17.8         181      3625 fema…  2007\n 8 Adelie  Torge…     39.2     19.6         195      4675 male   2007\n 9 Adelie  Torge…     34.1     18.1         193      3475 <NA>   2007\n10 Adelie  Torge…     42       20.2         190      4250 <NA>   2007\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n# `select` and `arrange` {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n## `select` - keep variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  select(species, island)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   species island   \n   <fct>   <fct>    \n 1 Adelie  Torgersen\n 2 Adelie  Torgersen\n 3 Adelie  Torgersen\n 4 Adelie  Torgersen\n 5 Adelie  Torgersen\n 6 Adelie  Torgersen\n 7 Adelie  Torgersen\n 8 Adelie  Torgersen\n 9 Adelie  Torgersen\n10 Adelie  Torgersen\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## `select` - exclude variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  select(-year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 7\n   species island    bill_len bill_dep flipper_len body_mass sex   \n   <fct>   <fct>        <dbl>    <dbl>       <int>     <int> <fct> \n 1 Adelie  Torgersen     39.1     18.7         181      3750 male  \n 2 Adelie  Torgersen     39.5     17.4         186      3800 female\n 3 Adelie  Torgersen     40.3     18           195      3250 female\n 4 Adelie  Torgersen     NA       NA            NA        NA <NA>  \n 5 Adelie  Torgersen     36.7     19.3         193      3450 female\n 6 Adelie  Torgersen     39.3     20.6         190      3650 male  \n 7 Adelie  Torgersen     38.9     17.8         181      3625 female\n 8 Adelie  Torgersen     39.2     19.6         195      4675 male  \n 9 Adelie  Torgersen     34.1     18.1         193      3475 <NA>  \n10 Adelie  Torgersen     42       20.2         190      4250 <NA>  \n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## `select` - multiple variables\n\n-   a range of variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  select(species:bill_dep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 4\n   species island    bill_len bill_dep\n   <fct>   <fct>        <dbl>    <dbl>\n 1 Adelie  Torgersen     39.1     18.7\n 2 Adelie  Torgersen     39.5     17.4\n 3 Adelie  Torgersen     40.3     18  \n 4 Adelie  Torgersen     NA       NA  \n 5 Adelie  Torgersen     36.7     19.3\n 6 Adelie  Torgersen     39.3     20.6\n 7 Adelie  Torgersen     38.9     17.8\n 8 Adelie  Torgersen     39.2     19.6\n 9 Adelie  Torgersen     34.1     18.1\n10 Adelie  Torgersen     42       20.2\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## `select` - multiple variables\n\n-   a range of variables\n-   variables with certain characteristics\n\n. . .\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  select(starts_with(\"bill\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   bill_len bill_dep\n      <dbl>    <dbl>\n 1     39.1     18.7\n 2     39.5     17.4\n 3     40.3     18  \n 4     NA       NA  \n 5     36.7     19.3\n 6     39.3     20.6\n 7     38.9     17.8\n 8     39.2     19.6\n 9     34.1     18.1\n10     42       20.2\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n:::: column\n::: fragment\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  select(ends_with(\"len\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   bill_len flipper_len\n      <dbl>       <int>\n 1     39.1         181\n 2     39.5         186\n 3     40.3         195\n 4     NA            NA\n 5     36.7         193\n 6     39.3         190\n 7     38.9         181\n 8     39.2         195\n 9     34.1         193\n10     42           190\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n## Select helpers\n\n-   `starts_with()`: Starts with a prefix\n-   `ends_with()`: Ends with a suffix\n-   `contains()`: Contains a literal string\n-   `num_range()`: Matches a numerical range like x01, x02, x03\n-   `one_of()`: Matches variable names in a character vector\n-   `everything()`: Matches all variables\n-   `last_col()`: Select last variable, possibly with an offset\n-   `matches()`: Matches a regular expression (a sequence of symbols/characters expressing a string/pattern to be searched for within text)\n\n::: footnote\nSee help for any of these functions for more info, e.g. `?everything`.\n:::\n\n## `arrange` in ascending / descending order\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  select(species,bill_dep) %>%\n  arrange(bill_dep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   species bill_dep\n   <fct>      <dbl>\n 1 Gentoo      13.1\n 2 Gentoo      13.2\n 3 Gentoo      13.3\n 4 Gentoo      13.4\n 5 Gentoo      13.5\n 6 Gentoo      13.5\n 7 Gentoo      13.6\n 8 Gentoo      13.7\n 9 Gentoo      13.7\n10 Gentoo      13.7\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  select(species,bill_dep) %>%\n  arrange(desc(bill_dep))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   species   bill_dep\n   <fct>        <dbl>\n 1 Adelie        21.5\n 2 Adelie        21.2\n 3 Adelie        21.2\n 4 Adelie        21.1\n 5 Adelie        21.1\n 6 Adelie        21.1\n 7 Chinstrap     20.8\n 8 Adelie        20.7\n 9 Adelie        20.7\n10 Chinstrap     20.7\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n. . .\n\n::: column\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  select(species,bill_dep) %>%\n  arrange(-bill_dep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   species   bill_dep\n   <fct>        <dbl>\n 1 Adelie        21.5\n 2 Adelie        21.2\n 3 Adelie        21.2\n 4 Adelie        21.1\n 5 Adelie        21.1\n 6 Adelie        21.1\n 7 Chinstrap     20.8\n 8 Adelie        20.7\n 9 Adelie        20.7\n10 Chinstrap     20.7\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n\n# `filter` {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FECCDD, #FECCDD, #FECCDD)\"}\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## `filter` to select a subset of rows\n\n\n\n::: {.cell labels='filter'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  filter(species == \"Adelie\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 152 × 8\n   species island bill_len bill_dep flipper_len body_mass sex    year\n   <fct>   <fct>     <dbl>    <dbl>       <int>     <int> <fct> <int>\n 1 Adelie  Torge…     39.1     18.7         181      3750 male   2007\n 2 Adelie  Torge…     39.5     17.4         186      3800 fema…  2007\n 3 Adelie  Torge…     40.3     18           195      3250 fema…  2007\n 4 Adelie  Torge…     NA       NA            NA        NA <NA>   2007\n 5 Adelie  Torge…     36.7     19.3         193      3450 fema…  2007\n 6 Adelie  Torge…     39.3     20.6         190      3650 male   2007\n 7 Adelie  Torge…     38.9     17.8         181      3625 fema…  2007\n 8 Adelie  Torge…     39.2     19.6         195      4675 male   2007\n 9 Adelie  Torge…     34.1     18.1         193      3475 <NA>   2007\n10 Adelie  Torge…     42       20.2         190      4250 <NA>   2007\n# ℹ 142 more rows\n```\n\n\n:::\n:::\n\n\n\n## `filter` for many conditions at once\n\n\n\n::: {.cell labels='filter-multi'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\npenguins %>%\n  filter(\n    species == \"Adelie\",\n    bill_dep > 20\n    ) %>%\n  select(species:bill_dep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 4\n   species island    bill_len bill_dep\n   <fct>   <fct>        <dbl>    <dbl>\n 1 Adelie  Torgersen     39.3     20.6\n 2 Adelie  Torgersen     42       20.2\n 3 Adelie  Torgersen     38.6     21.2\n 4 Adelie  Torgersen     34.6     21.1\n 5 Adelie  Torgersen     42.5     20.7\n 6 Adelie  Torgersen     46       21.5\n 7 Adelie  Dream         39.2     21.1\n 8 Adelie  Dream         42.3     21.2\n 9 Adelie  Biscoe        41.3     21.1\n10 Adelie  Dream         41.3     20.3\n11 Adelie  Biscoe        45.6     20.3\n12 Adelie  Biscoe        39.6     20.7\n13 Adelie  Torgersen     37.3     20.5\n14 Adelie  Dream         40.2     20.1\n```\n\n\n:::\n:::\n\n\n\n## `filter` for more complex conditions\n\n\n\n::: {.cell labels='filter-complex'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins %>%\n  filter(\n    species == \"Adelie\",\n    bill_dep > 20 | bill_dep < 17\n    ) %>%\n  select(species:bill_dep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 29 × 4\n   species island    bill_len bill_dep\n   <fct>   <fct>        <dbl>    <dbl>\n 1 Adelie  Torgersen     39.3     20.6\n 2 Adelie  Torgersen     42       20.2\n 3 Adelie  Torgersen     38.6     21.2\n 4 Adelie  Torgersen     34.6     21.1\n 5 Adelie  Torgersen     42.5     20.7\n 6 Adelie  Torgersen     46       21.5\n 7 Adelie  Dream         39.5     16.7\n 8 Adelie  Dream         39.2     21.1\n 9 Adelie  Dream         37       16.9\n10 Adelie  Dream         42.3     21.2\n# ℹ 19 more rows\n```\n\n\n:::\n:::\n\n\n\n## Logical operators in R\n\n<br>\n\n| operator | definition |   | operator | definition |\n|----------|------------------------|----|------------|------------------------|\n| `<` | less than |  | `x & y` | `x` AND `y` |\n| `<=` | less than or equal to |  |  `x | y` | `x` OR `y` |\n| `>` | greater than |  | `is.na(x)` | test if `x` is `NA` |\n| `>=` | greater than or equal to |  | `!is.na(x)` | test if `x` is not `NA` |\n| `==` | exactly equal to |  | `x %in% y` | test if `x` is in `y` |\n| `!=` | not equal to |  | `!(x %in% y)` | test if `x` is not in `y` |\n\n# `distinct` and `count` {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n\n## `distinct` to filter for unique rows\n\n... and `arrange` to order alphabetically\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  distinct(species) %>%\n  arrange(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  species  \n  <fct>    \n1 Adelie   \n2 Chinstrap\n3 Gentoo   \n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: fragment\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  distinct(species, island) %>%\n  arrange(species, island)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  species   island   \n  <fct>     <fct>    \n1 Adelie    Biscoe   \n2 Adelie    Dream    \n3 Adelie    Torgersen\n4 Chinstrap Dream    \n5 Gentoo    Biscoe   \n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n## `count` to create frequency tables\n\n::: {.column}\nAlphabetical ordering by default\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  count(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: fragment\nOrder by descending frequency\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  count(species, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Gentoo      124\n3 Chinstrap    68\n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n## `count` and `arrange`\n\n::: {.column}\nArrange by ascending frequency order\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  count(species) %>%\n  arrange(n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Chinstrap    68\n2 Gentoo      124\n3 Adelie      152\n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: fragment\nArrange by descending frequency order\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  count(species) %>%\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Gentoo      124\n3 Chinstrap    68\n```\n\n\n:::\n:::\n\n\n\n*same output as `sort = TRUE`*\n:::\n::::\n\n## `count` for multiple variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  count(species,island) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n```\n\n\n:::\n:::\n\n\n\n## order matters when you `count`\n\n::: {.column}\n`species` first\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  count(species,island) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: fragment\n`island` first\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  count(island,species) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  island    species       n\n  <fct>     <fct>     <int>\n1 Biscoe    Adelie       44\n2 Biscoe    Gentoo      124\n3 Dream     Adelie       56\n4 Dream     Chinstrap    68\n5 Torgersen Adelie       52\n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n# Your turn: <br>`select`, `arrange`, `filter`, `distinct`, `count` {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #6BE1CA)\"}\n\n✋ if you have questions or need help\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"/></svg>`{=html} when you are finished\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_4644a9d8\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n# `mutate` {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FECCDD, #FECCDD, #FECCDD)\"}\n\n## `mutate` to add a new variable\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep) %>%\n  select(species:bill_dep,bill_ratio) %>%\n  arrange(desc(bill_ratio))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 5\n   species island bill_len bill_dep bill_ratio\n   <fct>   <fct>     <dbl>    <dbl>      <dbl>\n 1 Gentoo  Biscoe     51.3     14.2       3.61\n 2 Gentoo  Biscoe     50.2     14.3       3.51\n 3 Gentoo  Biscoe     59.6     17         3.51\n 4 Gentoo  Biscoe     46.1     13.2       3.49\n 5 Gentoo  Biscoe     54.3     15.7       3.46\n 6 Gentoo  Biscoe     48.7     14.1       3.45\n 7 Gentoo  Biscoe     47.2     13.7       3.45\n 8 Gentoo  Biscoe     46.5     13.5       3.44\n 9 Gentoo  Biscoe     55.1     16         3.44\n10 Gentoo  Biscoe     48.5     14.1       3.44\n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n\n## Small and large bill ratios\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep) %>%\n  select(species,bill_ratio) %>%\n  filter(bill_ratio < 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 35 × 2\n   species bill_ratio\n   <fct>        <dbl>\n 1 Adelie        1.90\n 2 Adelie        1.91\n 3 Adelie        1.88\n 4 Adelie        1.82\n 5 Adelie        1.64\n 6 Adelie        1.87\n 7 Adelie        1.87\n 8 Adelie        1.87\n 9 Adelie        1.86\n10 Adelie        1.94\n# ℹ 25 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep) %>%\n  select(species,bill_ratio) %>%\n  filter(bill_ratio > 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 109 × 2\n   species bill_ratio\n   <fct>        <dbl>\n 1 Gentoo        3.49\n 2 Gentoo        3.07\n 3 Gentoo        3.45\n 4 Gentoo        3.29\n 5 Gentoo        3.28\n 6 Gentoo        3.44\n 7 Gentoo        3.11\n 8 Gentoo        3.05\n 9 Gentoo        3.23\n10 Gentoo        3.04\n# ℹ 99 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## `mutate` based on criteria\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = ifelse(bill_ratio < 2, \"small\", \"large\")) %>%\n  count(species,ratio_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  species   ratio_class     n\n  <fct>     <chr>       <int>\n1 Adelie    large         116\n2 Adelie    small          35\n3 Adelie    <NA>            1\n4 Chinstrap large          68\n5 Gentoo    large         123\n6 Gentoo    <NA>            1\n```\n\n\n:::\n:::\n\n\n\n\n## `mutate` based on criteria (cont.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 ~ \"small\",\n                                 bill_ratio > 3 ~ \"large\",\n                                 TRUE ~ \"medium\")) %>%\n  count(species,ratio_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  species   ratio_class     n\n  <fct>     <chr>       <int>\n1 Adelie    medium        117\n2 Adelie    small          35\n3 Chinstrap large           1\n4 Chinstrap medium         67\n5 Gentoo    large         108\n6 Gentoo    medium         16\n```\n\n\n:::\n:::\n\n\n\n## `case_when` overview\n\n- Multiple if/else statements in a single easy to read format\n- Assessed in order\n- If no `.default` or `TRUE` statement provided will result in missing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 ~ \"small\",\n                                 bill_ratio > 3 ~ \"large\")) %>%\n  count(species,ratio_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  species   ratio_class     n\n  <fct>     <chr>       <int>\n1 Adelie    small          35\n2 Adelie    <NA>          117\n3 Chinstrap large           1\n4 Chinstrap <NA>           67\n5 Gentoo    large         108\n6 Gentoo    <NA>           16\n```\n\n\n:::\n:::\n\n\n\n## `case_when` - final else statement\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 ~ \"small\",\n                                 bill_ratio > 3 ~ \"large\",\n                                 TRUE ~ \"medium\")) %>%\n  count(species,ratio_class)\n```\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(.default = \"medium\",\n                                 bill_ratio < 2 ~ \"small\",\n                                 bill_ratio > 3 ~ \"large\")) %>%\n  count(species,ratio_class)\n```\n:::\n\n\n\n## `case_when` order matters\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 ~ \"small\",\n                                 bill_ratio < 3 ~ \"medium\",\n                                 TRUE ~ \"large\")) %>%\n  count(species,ratio_class)\n```\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 3 ~ \"medium\",\n                                 bill_ratio < 2 ~ \"small\",\n                                 TRUE ~ \"large\")) %>%\n  count(species,ratio_class)\n```\n:::\n\n\n\n::: {.notes}\nleft side:\n- if `bill_ratio < 2` then small\n- else if `bill_ratio < 3` then medium\n- else then large\n\nright side:\n- if `bill_ration < 3` then medium\n- else if `bill_ratio < 2` then small\n- The `small` category will never be utilized since the medium will take all < 2 automatically\n\n:::\n\n## `case_when` order matters (cont.)\n\n\n::: {.cell}\n\n:::\n\n\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\ncase_when(bill_ratio < 2 ~ \"small\",\n          bill_ratio < 3 ~ \"medium\",\n          TRUE ~ \"large\"))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  species   ratio_class     n\n  <fct>     <chr>       <int>\n1 Adelie    large           1\n2 Adelie    medium        116\n3 Adelie    small          35\n4 Chinstrap large           1\n5 Chinstrap medium         67\n6 Gentoo    large         109\n7 Gentoo    medium         15\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\ncase_when(bill_ratio < 3 ~ \"medium\",\n          bill_ratio < 2 ~ \"small\",\n          TRUE ~ \"large\"))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  species   ratio_class     n\n  <fct>     <chr>       <int>\n1 Adelie    large           1\n2 Adelie    medium        151\n3 Chinstrap large           1\n4 Chinstrap medium         67\n5 Gentoo    large         109\n6 Gentoo    medium         15\n```\n\n\n:::\n:::\n\n\n:::\n\n## `case_when` order matters (cont.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-8\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 & sex == \"female\" ~ \"small-female\",\n                                 bill_ratio < 2 ~ \"small-male\",\n                                 bill_ratio < 3 & sex == \"female\" ~ \"medium-female\",\n                                 bill_ratio < 3 ~ \"medium-male\",\n                                 sex == \"female\" ~ \"large-female\",\n                                 TRUE ~ \"large-male\")) %>%\n  count(sex,ratio_class)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-8\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 ~ \"small-male\",\n                                 bill_ratio < 2 & sex == \"female\" ~ \"small-female\",\n                                 bill_ratio < 3 ~ \"medium-male\",\n                                 bill_ratio < 3 & sex == \"female\" ~ \"medium-female\",\n                                 sex == \"female\" ~ \"large-female\",\n                                 TRUE ~ \"large-male\")) %>%\n  count(sex,ratio_class)\n```\n:::\n\n\n\n## `case_when` order matters (cont.)\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2\"}\ncase_when(bill_ratio < 2 & sex == \"female\" ~ \"small-female\",\n          bill_ratio < 2 ~ \"small-male\",\n          bill_ratio < 3 & sex == \"female\" ~ \"medium-female\",\n          bill_ratio < 3 ~ \"medium-male\",\n          sex == \"female\" ~ \"large-female\",\n          TRUE ~ \"large-male\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  sex    ratio_class       n\n  <fct>  <chr>         <int>\n1 female large-female     55\n2 female medium-female    93\n3 female small-female     17\n4 male   large-male       51\n5 male   medium-male     101\n6 male   small-male       16\n7 <NA>   large-male        5\n8 <NA>   medium-male       4\n9 <NA>   small-male        2\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2\"}\ncase_when(bill_ratio < 2 ~ \"small-male\",\n          bill_ratio < 2 & sex == \"female\" ~ \"small-female\",\n          bill_ratio < 3 ~ \"medium-male\",\n          bill_ratio < 3 & sex == \"female\" ~ \"medium-female\",\n          sex == \"female\" ~ \"large-female\",\n          TRUE ~ \"large-male\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  sex    ratio_class      n\n  <fct>  <chr>        <int>\n1 female large-female    55\n2 female medium-male     93\n3 female small-male      17\n4 male   large-male      51\n5 male   medium-male    101\n6 male   small-male      16\n7 <NA>   large-male       5\n8 <NA>   medium-male      4\n9 <NA>   small-male       2\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## `case_when` missing data\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,6,8\"}\npenguins %>%\n  mutate(bill_ratio = bill_len / bill_dep,\n         ratio_class = case_when(bill_ratio < 2 & sex == \"female\" ~ \"small-female\",\n                                 bill_ratio < 2 & sex == \"male\" ~ \"small-male\",\n                                 bill_ratio < 3 & sex == \"female\" ~ \"medium-female\",\n                                 bill_ratio < 3 & sex == \"male\" ~ \"medium-male\",\n                                 sex == \"female\" ~ \"large-female\",\n                                 sex == \"male\" ~ \"large-male\")) %>%\n  count(sex,ratio_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  sex    ratio_class       n\n  <fct>  <chr>         <int>\n1 female large-female     55\n2 female medium-female    93\n3 female small-female     17\n4 male   large-male       51\n5 male   medium-male     101\n6 male   small-male       16\n7 <NA>   <NA>             11\n```\n\n\n:::\n:::\n\n\n\n# `summarize` and `group_by` {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n## `summarize` for summary stats\n\n::: {.incremental}\n- Fun fact: `summarize` and `summarise` both work\n- Hadley Wickham, creator of the `tidyverse` is from New Zealand\n- `mutate`: observation level\n- `summarize`: aggregation of data\n:::\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>% \n  summarize(avg_bill_len = mean(bill_len, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  avg_bill_len\n         <dbl>\n1         43.9\n```\n\n\n:::\n:::\n\n\n\n# {background-gradient=\"radial-gradient(#FFA219, #FFFFFF, #FFFFFF)\"}\n\n::: {.tip}\n💡<b>Tip!</b> <br><br> \n`summarize()` changes the data frame entirely. \nIt collapses rows down to a single summary statistic, and removes all columns that are irrelevant to the calculation.\n:::\n\n## `group_by` for grouped operations\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>% \n  group_by(species) %>% \n  summarize(avg_bill_len = mean(bill_len, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species   avg_bill_len\n  <fct>            <dbl>\n1 Adelie            38.8\n2 Chinstrap         48.8\n3 Gentoo            47.5\n```\n\n\n:::\n:::\n\n\n\n## `group_by` - multiple variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>% \n  group_by(species,island) %>% \n  summarize(avg_bill_len = mean(bill_len, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   species [3]\n  species   island    avg_bill_len\n  <fct>     <fct>            <dbl>\n1 Adelie    Biscoe            39.0\n2 Adelie    Dream             38.5\n3 Adelie    Torgersen         39.0\n4 Chinstrap Dream             48.8\n5 Gentoo    Biscoe            47.5\n```\n\n\n:::\n:::\n\n\n\n## Calculating frequencies\n\n- `count` is simply short for `group_by` then determine frequencies\n- the following two results give the same result\n\n. . .\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  group_by(species) %>% \n  summarize(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  count(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n:::\n\n## Multiple summary statistics\n\n`summarize` can be used for multiple summary statistics as well\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  summarize(\n    min_bill_len = min(bill_len, na.rm = TRUE),\n    mean_bill_len = mean(bill_len, na.rm = TRUE),\n    median_bill_len = median(bill_len, na.rm = TRUE),\n    max_bill_len = max(bill_len, na.rm = TRUE)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  min_bill_len mean_bill_len median_bill_len max_bill_len\n         <dbl>         <dbl>           <dbl>        <dbl>\n1         32.1          43.9            44.4         59.6\n```\n\n\n:::\n:::\n\n\n\n## `summarize` with missing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>% \n  group_by(species) %>% \n  summarize(avg_bill_len = mean(bill_len))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species   avg_bill_len\n  <fct>            <dbl>\n1 Adelie            NA  \n2 Chinstrap         48.8\n3 Gentoo            NA  \n```\n\n\n:::\n:::\n\n\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins %>% \n  group_by(species) %>% \n  summarize(avg_bill_len = mean(bill_len, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species   avg_bill_len\n  <fct>            <dbl>\n1 Adelie            38.8\n2 Chinstrap         48.8\n3 Gentoo            47.5\n```\n\n\n:::\n:::\n\n\n\n\n\n## `summarize` with missing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins %>%\n  filter(!is.na(bill_len)) %>% \n  group_by(species) %>% \n  summarize(avg_bill_len = mean(bill_len))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species   avg_bill_len\n  <fct>            <dbl>\n1 Adelie            38.8\n2 Chinstrap         48.8\n3 Gentoo            47.5\n```\n\n\n:::\n:::\n\n\n\n\n# Your turn: <br>`mutate`, `group_by`, `summarize` {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #6BE1CA)\"}\n\n✋ if you have questions or need help\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"/></svg>`{=html} when you are finished\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_24e9e04c\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}