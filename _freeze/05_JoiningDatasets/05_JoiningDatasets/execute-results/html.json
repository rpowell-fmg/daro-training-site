{
  "hash": "c6083996b8922eed02eb6ab5a3d08be9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Merging/Joining Multiple Datasets\"\norder: 5\ntitle-slide-attributes:\n    data-background-gradient: linear-gradient(to top right, {{< brand color background >}}, {{< brand color pastelpink >}}, {{< brand color fmorange >}}, {{< brand color tangerine >}})\n\nformat: \n  revealjs:\n    margin: .15\n    quarto-required: \">= 1.6.0\"\n    width: 1600\n    height: 900\n    slide-number: \"c\"\n    css: ../styles.css\n    code-copy: true\n    echo: true\n    code-overflow: scroll\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Data {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #FECCDD)\"}\n\n# Data: Women in science {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #FECCDD)\"}\nInformation on 10 women in science who changed the world\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Inputs\n\n::: {.panel-tabset}\n\n### professions\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   name               profession                        \n   <chr>              <chr>                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n```\n\n\n:::\n:::\n\n\n\n### dates\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  name               birth_year death_year\n  <chr>                   <dbl>      <dbl>\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947         NA\n8 Jennifer Doudna          1964         NA\n```\n\n\n:::\n:::\n\n\n\n### works\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 2\n  name               known_for                                       \n  <chr>              <chr>                                           \n1 Ada Lovelace       first computer algorithm                        \n2 Marie Curie        theory of radioactivity,  discovery of elements…\n3 Janaki Ammal       hybrid species, biodiversity protection         \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta de…\n5 Katherine Johnson  calculations of orbital mechanics critical to s…\n6 Vera Rubin         existence of dark matter                        \n7 Gladys West        mathematical modeling of the shape of the Earth…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map o…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a grou…\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.footnote}\nSource: [Discover Magazine](https://www.discovermagazine.com/the-sciences/meet-10-women-in-science-who-changed-the-world)\n:::\n\n\n\n## Desired output\n\n\n\n::: {.cell content-overflow='nostretch'}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   name               profession      birth_year death_year known_for\n   <chr>              <chr>                <dbl>      <dbl> <chr>    \n 1 Ada Lovelace       Mathematician           NA         NA first co…\n 2 Marie Curie        Physicist and …         NA         NA theory o…\n 3 Janaki Ammal       Botanist              1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist             1912       1997 confim a…\n 5 Katherine Johnson  Mathematician         1918       2020 calculat…\n 6 Rosalind Franklin  Chemist               1920       1958 <NA>     \n 7 Vera Rubin         Astronomer            1928       2016 existenc…\n 8 Gladys West        Mathematician         1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and…       1947         NA first sc…\n10 Jennifer Doudna    Biochemist            1964         NA one of t…\n```\n\n\n:::\n:::\n\n\n\n\n\n## Inputs, reminder\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"       \"profession\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"       \"birth_year\"\n[3] \"death_year\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"      \"known_for\"\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n# Joining data frames {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n## Joining data frames\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsomething_join(x, y)\n```\n:::\n\n\n\n- `left_join()`: all rows from x\n- `right_join()`: all rows from y\n- `full_join()`: all rows from both x and y\n- `semi_join()`: all rows from x where there are matching values in y, keeping just columns from x\n- `inner_join()`: all rows from x where there are matching values in y, return\nall combination of multiple matches in the case of multiple matches\n- `anti_join()`: return all rows from x where there are not matching values in y, never duplicate rows of x\n- ...\n\n\n## Setup\n\n\n::: {.cell}\n\n:::\n\n\n\nFor the next few slides...\n\n::: {.column}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n```\n\n\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_y\n  <dbl> <chr>  \n1     1 y1     \n2     2 y2     \n3     4 y4     \n```\n\n\n:::\n:::\n\n\n:::\n\n\n## `left_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/left-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n```\n\n\n:::\n:::\n\n\n:::\n\n## `left_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nprofessions %>%\n  left_join(dates) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name               profession                birth_year death_year\n   <chr>              <chr>                          <dbl>      <dbl>\n 1 Ada Lovelace       Mathematician                     NA         NA\n 2 Marie Curie        Physicist and Chemist             NA         NA\n 3 Janaki Ammal       Botanist                        1897       1984\n 4 Chien-Shiung Wu    Physicist                       1912       1997\n 5 Katherine Johnson  Mathematician                   1918       2020\n 6 Rosalind Franklin  Chemist                         1920       1958\n 7 Vera Rubin         Astronomer                      1928       2016\n 8 Gladys West        Mathematician                   1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular…       1947         NA\n10 Jennifer Doudna    Biochemist                      1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n## `right_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/right-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nright_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n\n## `right_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nprofessions %>%\n  right_join(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  name               profession                 birth_year death_year\n  <chr>              <chr>                           <dbl>      <dbl>\n1 Janaki Ammal       Botanist                         1897       1984\n2 Chien-Shiung Wu    Physicist                        1912       1997\n3 Katherine Johnson  Mathematician                    1918       2020\n4 Rosalind Franklin  Chemist                          1920       1958\n5 Vera Rubin         Astronomer                       1928       2016\n6 Gladys West        Mathematician                    1930         NA\n7 Flossie Wong-Staal Virologist and Molecular …       1947         NA\n8 Jennifer Doudna    Biochemist                       1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n## `full_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/full-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n4     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n\n## `full_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ndates %>%\n  full_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                \n   <chr>                   <dbl>      <dbl> <chr>                    \n 1 Janaki Ammal             1897       1984 hybrid species, biodiver…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory…\n 3 Katherine Johnson        1918       2020 calculations of orbital …\n 4 Rosalind Franklin        1920       1958 <NA>                     \n 5 Vera Rubin               1928       2016 existence of dark matter \n 6 Gladys West              1930         NA mathematical modeling of…\n 7 Flossie Wong-Staal       1947         NA first scientist to clone…\n 8 Jennifer Doudna          1964         NA one of the primary devel…\n 9 Ada Lovelace               NA         NA first computer algorithm \n10 Marie Curie                NA         NA theory of radioactivity,…\n```\n\n\n:::\n:::\n\n\n\n\n## `inner_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/inner-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n```\n\n\n:::\n:::\n\n\n:::\n\n## `inner_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ndates %>%\n  inner_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                 \n  <chr>                   <dbl>      <dbl> <chr>                     \n1 Janaki Ammal             1897       1984 hybrid species, biodivers…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory …\n3 Katherine Johnson        1918       2020 calculations of orbital m…\n4 Vera Rubin               1928       2016 existence of dark matter  \n5 Gladys West              1930         NA mathematical modeling of …\n6 Flossie Wong-Staal       1947         NA first scientist to clone …\n7 Jennifer Doudna          1964         NA one of the primary develo…\n```\n\n\n:::\n:::\n\n\n\n## `semi_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/semi-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsemi_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n```\n\n\n:::\n:::\n\n\n:::\n\n## `semi_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ndates %>%\n  semi_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  name               birth_year death_year\n  <chr>                   <dbl>      <dbl>\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Vera Rubin               1928       2016\n5 Gladys West              1930         NA\n6 Flossie Wong-Staal       1947         NA\n7 Jennifer Doudna          1964         NA\n```\n\n\n:::\n:::\n\n\n\n## `anti_join()`\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/anti-join.gif){width=80% style=\"background-color: #F0F0F0\"}\n:::\n:::\n\n\n:::\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanti_join(x, y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n     id value_x\n  <dbl> <chr>  \n1     3 x3     \n```\n\n\n:::\n:::\n\n\n:::\n\n## `anti_join()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ndates %>%\n  anti_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  name              birth_year death_year\n  <chr>                  <dbl>      <dbl>\n1 Rosalind Franklin       1920       1958\n```\n\n\n:::\n:::\n\n\n\n# {background-gradient=\"radial-gradient(#FFA219, #FFFFFF, #FFFFFF)\"}\n\n::: {.tip}\n💡<b>Tip!</b> <br><br> \nOrder of the datasets matters when you join\n`anti_join(x, y)` is different from `anti_join(y, x)`\n:::\n\n\n## Putting it altogether\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2|3\"}\nprofessions %>%\n  left_join(dates) %>%\n  left_join(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   name               profession      birth_year death_year known_for\n   <chr>              <chr>                <dbl>      <dbl> <chr>    \n 1 Ada Lovelace       Mathematician           NA         NA first co…\n 2 Marie Curie        Physicist and …         NA         NA theory o…\n 3 Janaki Ammal       Botanist              1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist             1912       1997 confim a…\n 5 Katherine Johnson  Mathematician         1918       2020 calculat…\n 6 Rosalind Franklin  Chemist               1920       1958 <NA>     \n 7 Vera Rubin         Astronomer            1928       2016 existenc…\n 8 Gladys West        Mathematician         1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and…       1947         NA first sc…\n10 Jennifer Doudna    Biochemist            1964         NA one of t…\n```\n\n\n:::\n:::\n\n\n\n## Putting it altogether - better syntax\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,3\"}\nprofessions %>%\n  left_join(dates, by=\"name\") %>%\n  left_join(works, by=\"name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   name               profession      birth_year death_year known_for\n   <chr>              <chr>                <dbl>      <dbl> <chr>    \n 1 Ada Lovelace       Mathematician           NA         NA first co…\n 2 Marie Curie        Physicist and …         NA         NA theory o…\n 3 Janaki Ammal       Botanist              1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist             1912       1997 confim a…\n 5 Katherine Johnson  Mathematician         1918       2020 calculat…\n 6 Rosalind Franklin  Chemist               1920       1958 <NA>     \n 7 Vera Rubin         Astronomer            1928       2016 existenc…\n 8 Gladys West        Mathematician         1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and…       1947         NA first sc…\n10 Jennifer Doudna    Biochemist            1964         NA one of t…\n```\n\n\n:::\n:::\n\n\n\n\n# Joining on multiple variables {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FECCDD, #FECCDD, #FECCDD)\"}\n\n## Set-up for multiple variables join\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_multi <- x %>% \n  mutate(id2=c(4,5,6)) %>% \n  select(id,id2,value_x)\n\nx_multi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id   id2 value_x\n  <dbl> <dbl> <chr>  \n1     1     4 x1     \n2     2     5 x2     \n3     3     6 x3     \n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny_multi <- y %>% \n  mutate(id2=c(4,6,8)) %>% \n  select(id,id2,value_y)\n\ny_multi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id   id2 value_y\n  <dbl> <dbl> <chr>  \n1     1     4 y1     \n2     2     6 y2     \n3     4     8 y4     \n```\n\n\n:::\n:::\n\n\n:::\n\n## Left and right joins with multiple variables\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  left_join(y_multi,\n            by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n     id   id2 value_x value_y\n  <dbl> <dbl> <chr>   <chr>  \n1     1     4 x1      y1     \n2     2     5 x2      <NA>   \n3     3     6 x3      <NA>   \n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  right_join(y_multi,\n             by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n     id   id2 value_x value_y\n  <dbl> <dbl> <chr>   <chr>  \n1     1     4 x1      y1     \n2     2     6 <NA>    y2     \n3     4     8 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n## Full and inner joins with multiple variables\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  full_join(y_multi,\n            by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n     id   id2 value_x value_y\n  <dbl> <dbl> <chr>   <chr>  \n1     1     4 x1      y1     \n2     2     5 x2      <NA>   \n3     3     6 x3      <NA>   \n4     2     6 <NA>    y2     \n5     4     8 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  inner_join(y_multi,\n             by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n     id   id2 value_x value_y\n  <dbl> <dbl> <chr>   <chr>  \n1     1     4 x1      y1     \n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n## Semi and anti joins with multiple variables\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  semi_join(y_multi,\n            by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n     id   id2 value_x\n  <dbl> <dbl> <chr>  \n1     1     4 x1     \n```\n\n\n:::\n:::\n\n\n:::\n\n:::: {.column}\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nx_multi %>% \n  anti_join(y_multi,\n            by=c(\"id\",\"id2\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n     id   id2 value_x\n  <dbl> <dbl> <chr>  \n1     2     5 x2     \n2     3     6 x3     \n```\n\n\n:::\n:::\n\n\n:::\n::::\n\n# Your turn:  <br>Join data {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #6BE1CA)\"}\n\n✋ if you have questions or need help\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"/></svg>`{=html} when you are finished\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_96a70846\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}