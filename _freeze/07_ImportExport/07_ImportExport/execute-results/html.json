{
  "hash": "5a5d3107675738c22f1437dcc4afd42e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Import/Export Data\"\norder: 7\ntitle-slide-attributes:\n    data-background-gradient: linear-gradient(to top right, {{< brand color background >}}, {{< brand color pastelpink >}}, {{< brand color fmorange >}}, {{< brand color tangerine >}})\n\nformat: \n  revealjs:\n    margin: .15\n    quarto-required: \">= 1.6.0\"\n    width: 1600\n    height: 900\n    slide-number: \"c\"\n    css: ../styles.css\n    code-copy: true\n    echo: true\n    code-overflow: scroll\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Reading rectangular data into R\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/readr.png){width=80%}\n:::\n:::\n\n\n::: \n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/readxl.png){width=80%}\n:::\n:::\n\n\n::: \n\n## Reading rectangular data into R\n\n::: {.column}\n### readr\n\n- `read_csv()` - comma delimited files\n- `read_csv2()` - semicolon separated files (common in countries where , is used as the decimal place)\n- `read_tsv()` - tab delimited files\n- `read_delim()` - reads in files with any delimiter\n- `read_fwf()` - fixed width files\n- ...\n::: \n\n:::: {.column}\n::: {.fragment}\n### readxl\n\n- `read_excel()` - read xls or xlsx files\n- ...\n::: \n::::\n\n## Reading data (import)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel <- read_csv(file = \"../data/import/nobel.csv\")\nnobel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 935 × 26\n      id firstname   surname  year category affiliation city  country\n   <dbl> <chr>       <chr>   <dbl> <chr>    <chr>       <chr> <chr>  \n 1     1 Wilhelm Co… Röntgen  1901 Physics  Munich Uni… Muni… Germany\n 2     2 Hendrik A.  Lorentz  1902 Physics  Leiden Uni… Leid… Nether…\n 3     3 Pieter      Zeeman   1902 Physics  Amsterdam … Amst… Nether…\n 4     4 Henri       Becque…  1903 Physics  École Poly… Paris France \n 5     5 Pierre      Curie    1903 Physics  École muni… Paris France \n 6     6 Marie       Curie    1903 Physics  <NA>        <NA>  <NA>   \n 7     6 Marie       Curie    1911 Chemist… Sorbonne U… Paris France \n 8     8 Lord        Raylei…  1904 Physics  Royal Inst… Lond… United…\n 9     9 Philipp     Lenard   1905 Physics  Kiel Unive… Kiel  Germany\n10    10 J.J.        Thomson  1906 Physics  University… Camb… United…\n# ℹ 925 more rows\n# ℹ 18 more variables: born_date <date>, died_date <date>,\n#   gender <chr>, born_city <chr>, born_country <chr>,\n#   born_country_code <chr>, died_city <chr>, died_country <chr>,\n#   died_country_code <chr>, overall_motivation <chr>, share <dbl>,\n#   motivation <chr>, born_country_original <chr>,\n#   born_city_original <chr>, died_country_original <chr>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Writing data (export)\n\n::: {.column}\n- Write a file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tribble(\n  ~x, ~y,\n  1,  \"a\",\n  2,  \"b\",\n  3,  \"c\"\n)\n\nwrite_csv(df, file = \"../data/import/df.csv\")\n```\n:::\n\n\n::: \n\n:::: {.column}\n::: {.fragment}\n- Read it back in to inspect\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"../data/import/df.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n      x y    \n  <dbl> <chr>\n1     1 a    \n2     2 b    \n3     3 c    \n```\n\n\n:::\n:::\n\n\n::: \n::::\n\n\n# Variable names\n\n## Data with bad names\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedibnb_badnames <- read_csv(\"../data/import/edibnb-badnames.csv\")\nnames(edibnb_badnames)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"ID\"                   \"Price\"               \n [3] \"neighbourhood\"        \"accommodates\"        \n [5] \"Number of bathrooms\"  \"Number of Bedrooms\"  \n [7] \"n beds\"               \"Review Scores Rating\"\n [9] \"Number of reviews\"    \"listing_url\"         \n```\n\n\n:::\n:::\n\n\n\n. . .\n\n<br>\n... but R doesn't allow spaces in variable names\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(edibnb_badnames, aes(x = Number of bathrooms, y = Price)) +\n  geom_point()\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in parse(text = input): <text>:1:40: unexpected symbol\n1: ggplot(edibnb_badnames, aes(x = Number of\n                                           ^\n```\n\n\n:::\n:::\n\n\n\n## Option 1 - Define column names\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedibnb_col_names <- read_csv(\"../data/import/edibnb-badnames.csv\",\n                             col_names = c(\"id\", \"price\", \n                                           \"neighbourhood\", \"accommodates\",\n                                           \"bathroom\", \"bedroom\", \n                                           \"bed\", \"review_scores_rating\", \n                                           \"n_reviews\", \"url\"))\n\nnames(edibnb_col_names)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"id\"                   \"price\"               \n [3] \"neighbourhood\"        \"accommodates\"        \n [5] \"bathroom\"             \"bedroom\"             \n [7] \"bed\"                  \"review_scores_rating\"\n [9] \"n_reviews\"            \"url\"                 \n```\n\n\n:::\n:::\n\n\n\n## Option 2 - Format text to snake_case\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedibnb_clean_names <- read_csv(\"../data/import/edibnb-badnames.csv\") %>%\n  janitor::clean_names()\n\nnames(edibnb_clean_names)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"id\"                   \"price\"               \n [3] \"neighbourhood\"        \"accommodates\"        \n [5] \"number_of_bathrooms\"  \"number_of_bedrooms\"  \n [7] \"n_beds\"               \"review_scores_rating\"\n [9] \"number_of_reviews\"    \"listing_url\"         \n```\n\n\n:::\n:::\n\n\n\n## Option 3 - Use ticks (`)\n\nIf you go this option, ticks have to be used **everytime** the variable name is called\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(edibnb_badnames, \n       aes(x = `Number of bathrooms`, \n           y = Price)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](07_ImportExport_files/figure-revealjs/fix-varnames-opt3-1.png){width=960}\n:::\n:::\n\n\n\n# Missing Data\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/df-na.png){width=100%}\n:::\n:::\n\n\n::: \n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"../data/import/df-na.csv\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  x     y              z     \n  <chr> <chr>          <chr> \n1 1     a              hi    \n2 <NA>  b              hello \n3 3     Not applicable 9999  \n4 4     d              ola   \n5 5     e              hola  \n6 .     f              whatup\n7 7     g              wassup\n8 8     h              sup   \n9 9     i              <NA>  \n```\n\n\n:::\n:::\n\n\n::: \n\n## Option 1. Explicit NAs\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"../data/import/df-na.csv\", \n         na = c(\"\", \"NA\", \".\", \"9999\", \"Not applicable\"))\n```\n:::\n\n\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/df-na.png){width=100%}\n:::\n:::\n\n\n::: \n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n      x y     z     \n  <dbl> <chr> <chr> \n1     1 a     hi    \n2    NA b     hello \n3     3 <NA>  <NA>  \n4     4 d     ola   \n5     5 e     hola  \n6    NA f     whatup\n7     7 g     wassup\n8     8 h     sup   \n9     9 i     <NA>  \n```\n\n\n:::\n:::\n\n\n::: \n\n## Option 2. Specify column types\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"../data/import/df-na.csv\", \n         col_types = list(col_double(), \n                          col_character(), \n                          col_character()))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n      x y              z     \n  <dbl> <chr>          <chr> \n1     1 a              hi    \n2    NA b              hello \n3     3 Not applicable 9999  \n4     4 d              ola   \n5     5 e              hola  \n6    NA f              whatup\n7     7 g              wassup\n8     8 h              sup   \n9     9 i              <NA>  \n```\n\n\n:::\n:::\n\n\n\n## Column types\n\n| **type function** | **data type** |\n|------------------|------------------------------------------|\n`col_character()`  | character\n`col_date()`       | date\n`col_datetime()`   | POSIXct (date-time)\n`col_double()`     | double (numeric)\n`col_factor()`     | factor\n`col_guess()`      | let readr guess (default)\n`col_integer()`    | integer\n`col_logical()`    | logical\n`col_number()`     | numbers mixed with non-number characters\n`col_numeric()`    | double or integer\n`col_skip()`       | do not read\n`col_time()`       | time\n\n# Reading in Survey Data\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/haven.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## haven\n\n- SAS:\n    - `read_sas()` - reads .sas7bdat + .sas7bcat files\n    - `read_xpt()`- reads SAS transport files\n    - `write_xpt()` - writes SAS transport files \n- SPSS: \n    - `read_sav()` or `read_spss()`- reads .sav files \n    - `read_por()` - reads older .por files\n    - `write_sav()` - writes .sav files\n- Stata: \n    - `read_dta()` or `read_stata()` - reads .dta files \n    - `write_dta()` - writes .dta files\n\n## Labelled data\n\nWhen reading in data from SAS, SPSS, and Stata, data is likely to have labels\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspss_ex<-read_sav(\"../data/import/svy_spss.sav\")\n\nglimpse(spss_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,259\nColumns: 57\n$ CaseId                      <chr> \"16278\", \"1155\", \"15730\", \"1949…\n$ LastConnectionDate          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ LastConnectionStartTime     <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ ConnectionDurationInSeconds <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n$ ConnectionDurationInMinutes <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n$ LastQuestionFilled          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ NumberOfConnections         <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n$ resDisposition              <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ TotalDurationSec            <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…\n$ Device                      <chr> \"Unknown\", \"Unknown\", \"Unknown\"…\n$ DeviceOS                    <chr> \"Unknown\", \"Unknown\", \"Unknown\"…\n$ DeviceVersion               <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ DeviceBrowser               <chr> \"Unknown\", \"Unknown\", \"Unknown\"…\n$ DeviceBrowserVersion        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ S1                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ TT1                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA,…\n$ AGE                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q1                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q1B                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q2                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q2B                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q3                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q4                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q5                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ TT2                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ GENDER                      <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q6                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q7C1                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7C2                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7C3                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7C4                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7C5                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7C6                        <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Q7_VN                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ RACE                        <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q8                          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",…\n$ QS                          <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ QSB                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ TT3                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ PROPENSITY                  <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ EM7                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ EM7B                        <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ EM8C1                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C2                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C3                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C4                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C5                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C6                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C7                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C8                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C9                       <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8C10                      <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM8_VN                      <dbl+lbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ EM9                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ EM14                        <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q34                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n$ Q36                         <dbl+lbl> NA, NA, NA, NA, NA, NA, NA,…\n```\n\n\n:::\n:::\n\n\n\n## Labels\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(spss_ex$Q2)$label\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Have you ever been in the Military, are you in a college Reserve Officers’ Training Corps (ROTC) program or one of the Service academies, or have you been accepted to and are waiting to begin any of these programs?\"\n```\n\n\n:::\n:::\n\n\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(spss_ex$Q2)$labels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          No, none of the above apply to me. \n                                                                           0 \n                                Yes, I have previously been in the Military. \n                                                                           1 \n                                        Yes, I am currently in the Military. \n                                                                           2 \nYes, I am in or have been accepted to and will be in a college ROTC program. \n                                                                           3 \n     Yes, I am in or have been accepted to and will be in a Service academy. \n                                                                           4 \n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(spss_ex$Q2)$format.spss\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"F8.2\"\n```\n\n\n:::\n:::\n\n\n:::\n\n## Handling labels in R\n\nR doesn't use labels the same way\n\n::: column\nOption 1: Factors\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspss_ex_factor <- spss_ex %>% \n  as_factor()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 484\nColumns: 13\n$ S1     <fct> I wish to contin…\n$ TT1    <dbl> 38, 60, 16, 48, …\n$ AGE    <fct> NA, NA, NA, NA, …\n$ Q1     <fct> \"Yes, I am an ad…\n$ Q1B    <fct> NA, NA, \"Yes, I …\n$ Q2     <fct> \"No, none of the…\n$ Q2B    <fct> NA, Air Force, N…\n$ Q3     <fct> No, Yes, NA, No,…\n$ Q4     <fct> Yes, NA, NA, Yes…\n$ Q5     <fct> Influencer, Pare…\n$ TT2    <fct> Prefer not to an…\n$ GENDER <fct> Female/Prefer no…\n$ Q6     <fct> Yes, Yes, Yes, Y…\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\nOption 2: Strip the labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspss_ex_nolabels <- spss_ex %>% \n  zap_labels()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 484\nColumns: 13\n$ S1     <dbl> 1, 1, 1, 1, 1, 1…\n$ TT1    <dbl> 38, 60, 16, 48, …\n$ AGE    <dbl> NA, NA, NA, NA, …\n$ Q1     <dbl> 1, 1, 2, 1, 1, 2…\n$ Q1B    <dbl> NA, NA, 1, NA, N…\n$ Q2     <dbl> 0, 1, 0, 1, 0, 1…\n$ Q2B    <dbl> NA, 3, NA, 9, NA…\n$ Q3     <dbl> 0, 1, NA, 0, NA,…\n$ Q4     <dbl> 1, NA, NA, 1, NA…\n$ Q5     <dbl> 3, 2, 1, 3, 1, 3…\n$ TT2    <dbl> 3, 2, 3, 1, 1, N…\n$ GENDER <dbl> 2, 2, 2, 1, 1, N…\n$ Q6     <dbl> 1, 1, 1, 1, 0, N…\n```\n\n\n:::\n:::\n\n\n:::\n\n## Note on stripping the labels\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n- Variable and value labels have different functions for removal\n    - `zap_label()` singular \"label\" removes the label from the variable name\n    - `zap_labels()` plural \"label\" removes the labels from the values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(spss_ex_nolabels$Q2)$label\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Have you ever been in the Military, are you in a college Reserve Officers’ Training Corps (ROTC) program or one of the Service academies, or have you been accepted to and are waiting to begin any of these programs?\"\n```\n\n\n:::\n\n```{.r .cell-code}\nattributes(spss_ex_nolabels$Q2)$labels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n:::\n\n\n\n# Your turn: <br>Import/export data {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #6BE1CA)\"}\n\n✋ if you have questions or need help\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"/></svg>`{=html} when you are finished\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_c6f6fa4b\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}