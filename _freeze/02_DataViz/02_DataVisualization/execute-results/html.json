{
  "hash": "689989f2eb501abdc8e9c0443bf7798f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data and Visualization\"\norder: 2\ntitle-slide-attributes:\n    data-background-gradient: linear-gradient(to top right, {{< brand color background >}}, {{< brand color pastelpink >}}, {{< brand color fmorange >}}, {{< brand color tangerine >}})\n\nformat: \n  revealjs:\n    margin: .15\n    quarto-required: \">= 1.6.0\"\n    width: 1600\n    height: 900\n    slide-number: \"c\"\n    css: ../styles.css\n    code-copy: true\n    echo: true\n    code-overflow: scroll\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Looking at Data {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n## Starwars\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/luke-skywalker.png)\n:::\n:::\n\n\n\n\n## Glimpse\n  \nTake a `glimpse` at the data:\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 87\nColumns: 14\n$ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Dartâ€¦\n$ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183â€¦\n$ mass       <dbl> 77, 75, 32, 136, 49, 120, 75, 32, 84, 77,â€¦\n$ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown,â€¦\n$ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"â€¦\n$ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brownâ€¦\n$ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0â€¦\n$ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\",â€¦\n$ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"mâ€¦\n$ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooinâ€¦\n$ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Humaâ€¦\n$ films      <list> <\"A New Hope\", \"The Empire Strikes Back\"â€¦\n$ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">â€¦\n$ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, â€¦\n```\n\n\n:::\n:::\n\n\n\n## Dataset dimensions\n\n- How many rows and columns does this dataset have?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(starwars) # number of rows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(starwars) # number of columns\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(starwars)  # dimensions (row column)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87 14\n```\n\n\n:::\n:::\n\n\n\n## Dataset content - built in datasets\n  \n- What does each row represent?\n- What does each column represent?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?starwars\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/starwars-help.png)\n:::\n:::\n\n\n\n\n# Data visualization {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FECCDD, #FECCDD, #FECCDD)\"}\n\n## Data visualization\n\n> *\"The simple graph has brought more information to the data analyst's mind than any other device.\" --- John Tukey*\n\n- Data visualization is the creation and study of the visual representation of data\n- Many tools for visualizing data -- R is one of them\n- Many approaches/systems within R for making data visualizations -- **ggplot2** is one of them, and that's what we're going to use\n\n## Mass vs. height\n  \n- How would you describe the relationship between mass and height of Starwars characters?\n- What other variables would help us understand data points that don't follow the overall trend?\n- Who is the not so tall but really chubby character?\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/starwars-massheight-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n\n\n## Jabba!\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/jabbaplot.png){fig-align='center'}\n:::\n:::\n\n\n\n\n## ggplot2 $\\in$ tidyverse\n\n:::: {.columns}\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/ggplot2-part-of-tidyverse.png){width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column}\n- **ggplot2** is tidyverse's data visualization package\n- `gg` in \"ggplot2\" stands for Grammar of Graphics\n- Inspired by the book **Grammar of Graphics** by Leland Wilkinson\n:::\n\n::::\n\n## Grammar of Graphics\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/grammar-of-graphics.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n::: {.footnote}\nSource: [BloggoType](http://bloggotype.blogspot.com/2016/08/holiday-notes2-grammar-of-graphics.html)\n:::\n\n## Mass vs. height\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = starwars, mapping = aes(x = height, y = mass)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/starwars-massheight-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Hello ggplot2!\n\n- The ggplot2 package comes with the tidyverse\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n. . .\n\n- `ggplot()` is the main function in ggplot2\n- Plots are constructed in layers\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1,2|1|2|3|\"}\nggplot(data = [dataset],\n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   other options\n```\n:::\n\n\n\n\n# Example {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FFA219, #FFA219, #FFA219)\"}\n\n## Data: Palmer Penguins\n\nMeasurements for penguin species, island in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex.\n<br></br>\n\n::: {.column width = \"30%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/penguins.png)\n:::\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.column width = \"70%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species     <fct> Adelie, Adelie, Adelieâ€¦\n$ island      <fct> Torgersen, Torgersen, â€¦\n$ bill_len    <dbl> 39.1, 39.5, 40.3, NA, â€¦\n$ bill_dep    <dbl> 18.7, 17.4, 18.0, NA, â€¦\n$ flipper_len <int> 181, 186, 195, NA, 193â€¦\n$ body_mass   <int> 3750, 3800, 3250, NA, â€¦\n$ sex         <fct> male, female, female, â€¦\n$ year        <int> 2007, 2007, 2007, 2007â€¦\n```\n\n\n:::\n:::\n\n\n:::\n\n## Plot of bill depth and length by species\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Walk through syntax\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = penguins)\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep)\n       )\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len)\n       )\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len)\n       ) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len,\n                     color = species)\n       ) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len,\n                     color = species)\n       ) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       colour = \"Species\")\n```\n:::\n\n\n\n## Walk through syntax {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-6-show-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n# {background-gradient=\"radial-gradient(#FFA219, #FFFFFF, #FFFFFF)\"}\n\n::: {.tip}\nðŸ’¡<b>Tip!</b> <br><br> You can omit the names of first two arguments when building plots with `ggplot()`.\n:::\n\n## {background-gradient=\"radial-gradient(#FFA219, #FFFFFF, #FFFFFF)\"}\n\n::: {.column width=48%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len,\n                     colour = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/tip-named-args-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::: {.column width=4%}\n:::\n\n::: {.column width=48%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins,\n       aes(x = bill_dep,\n           y = bill_len,\n           colour = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/tip-not-named-args-1.png){width=960}\n:::\n:::\n\n\n:::\n\n\n## Themes {auto-animate=true}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"11,12\"}\nggplot(data = penguins,\n       mapping = aes(x = bill_dep,\n                     y = bill_len,\n                     color = species)\n       ) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       colour = \"Species\") +\n  scale_colour_viridis_d() +\n  theme_bw()\n```\n:::\n\n\n\n\n## Themes {auto-animate=true}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/penguins-bill-plot-code-7-show-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n# Aesthetics {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #7CDCFF, #7CDCFF, #7CDCFF)\"}\n\n## Aesthetics options\n\nCommonly used characteristics of plotting characters that can be **mapped to a specific variable** in the data are\n\n- `colour`\n- `shape`\n- `size`\n- `alpha` (transparency)\n\n## Colour\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(penguins,\n       aes(x = bill_dep, \n           y = bill_len,\n           colour = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/colour-1.png){fig-align='center' width=120%}\n:::\n:::\n\n\n\n\n\n## Shape\n\nMapped to a different variable than `colour`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(penguins,\n       aes(x = bill_dep, \n           y = bill_len,\n           colour = species,\n           shape = island)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/shape-island-1.png){fig-align='center' width=120%}\n:::\n:::\n\n\n\n## Shape\n\nMapped to same variable as `colour`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(penguins,\n       aes(x = bill_dep, \n           y = bill_len,\n           colour = species,\n           shape = species)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/shape-species-1.png){fig-align='center' width=120%}\n:::\n:::\n\n\n\n\n## Size\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins,\n       aes(x = bill_dep, \n           y = bill_len,\n           colour = species,\n           shape = species,\n           size = body_mass)) +\n  geom_point() +\n  scale_colour_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/size-1.png){fig-align='center' width=120%}\n:::\n:::\n\n\n\n\n## Alpha\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(penguins,\n       aes(x = bill_dep, \n           y = bill_len,\n           colour = species,\n           shape = species,\n           size = body_mass,\n           alpha = flipper_len)) + \n  geom_point() +\n  scale_colour_viridis_d()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/alpha-1.png){fig-align='center' width=120%}\n:::\n:::\n\n\n\n\n## Mapping vs. setting\n\n::: {.column width=48%}\n\n**Mapping**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\nggplot(penguins,\n       aes(x = bill_dep,\n           y = bill_len,\n           size = body_mass,\n           alpha = flipper_len)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/mapping-ex-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::: {.column width=4%}\n:::\n\n::: {.column width=48%}\n\n**Setting**\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5,6\"}\nggplot(penguins,\n       aes(x = bill_dep,\n           y = bill_len)\n       ) + \n  geom_point(size = 2, \n             alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/setting-ex-1.png){width=960}\n:::\n:::\n\n\n:::\n\n\n\n## Mapping vs. setting\n\n- **Mapping:** Determine the size, alpha, etc. of points based on the values of a variable in the data\n  - goes into `aes()`\n\n- **Setting:** Determine the size, alpha, etc. of points **not** based on the values of a variable in the data\n  - goes into `geom_*()` (this was `geom_point()` in the previous example)\n  \n\n\n# Types of geoms {background-gradient=\"linear-gradient(to bottom right, #FFFFFF, #FECCDD, #FECCDD, #FECCDD)\"}\n\n## Continuous Data\n\n- Histogram `geom_histogram()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_len)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/histogram-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Continuous Data \n\n- Histogram `geom_histogram()`\n- Density plot `geom_density()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_len)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/density-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Continuous Data \n\n- Histogram `geom_histogram()`\n- Density plot `geom_density()`\n- Box plot `geom_boxplot()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_len)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/boxplot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Continuous Data \n\n- Histogram `geom_histogram()`\n- Density plot `geom_density()`\n- Box plot `geom_boxplot()`\n- Scatterplots `geom_point()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_dep, y = bill_len)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/point-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Categorical Data\n\n- Bar plot `geom_bar()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = species)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/bar-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Categorical Data \n\n- Bar plot `geom_bar()`\n  - Stacked bar chart: add `fill`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(penguins, aes(x = species, \n                     fill = sex)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/bar-stacked-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Categorical Data \n\n- Bar plot `geom_bar()`\n  - Stacked bar chart: add `fill`\n  - Side by side bar chart: add `position = \"dodge\"`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(penguins, aes(x = species, \n                     fill = sex)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](02_DataVisualization_files/figure-revealjs/bar-side-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n# Your turn: <br>`ggplot` {background-gradient=\"linear-gradient(to bottom, #FFFFFF, #FFFFFF, #6BE1CA)\"}\n\nâœ‹ if you have questions or need help\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 512 512\" style=\"height:1em;width:1em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"/></svg>`{=html} when you are finished\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_9050a6c0\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}